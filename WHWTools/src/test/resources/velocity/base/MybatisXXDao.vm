/**
 * Copyright(C) 2015-2025 杏仁科技
 * All rights reserved
 * ${date1} Created
 */
package ${_package}.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.xingren.sdb.components.common.AbstractDao;
import ${_package}.${daoName};
import ${modulePackage}.model.${doName};

/**
 * <pre>
 * 
 * </pre>
 *
 * @author wwh
 * @date ${date2}
 *
 */
@Repository("${_daoName}")
public class ${className} extends AbstractDao implements ${daoName} {

    private static final String NAMESPACE = "${_package}.${daoName}.";

    @Override
    public int deleteByPrimaryKey(${idType} ${idName}) {
        return getSqlSessionTemplate().delete(NAMESPACE + "deleteByPrimaryKey", ${idName});
    }

    @Override
    public int insert(${doName} record) {
        return getSqlSessionTemplate().insert(NAMESPACE + "insert", record);
    }

    @Override
    public int insertSelective(${doName} record) {
        return getSqlSessionTemplate().insert(NAMESPACE + "insertSelective", record);
    }

    @Override
    public ${doName} selectByPrimaryKey(${idType} ${idName}) {
        return getSqlSessionTemplate().selectOne(NAMESPACE + "selectByPrimaryKey", ${idName});
    }

    @Override
    public int updateByPrimaryKeySelective(${doName} record) {
        return getSqlSessionTemplate().update(NAMESPACE + "updateByPrimaryKeySelective", record);
    }

    @Override
    public int updateByPrimaryKey(${doName} record) {
        return getSqlSessionTemplate().update(NAMESPACE + "updateByPrimaryKey", record);
    }

    @Override
    public List<${doName}> selectBySelective(${doName} record) {
        return getSqlSessionTemplate().selectList(NAMESPACE + "selectBySelective", record);
    }

    @Override
    public List<${doName}> selectByLanguage(String language) {
        return getSqlSessionTemplate().selectList(NAMESPACE + "selectByLanguage", language);
    }

    @Override
    public List<${doName}> selectByLangAndCode(String language, String code) {
        Map<String, String> map = new HashMap<String, String>();
        map.put("code", code);
        map.put("language", language);

        return getSqlSessionTemplate().selectList(NAMESPACE + "selectByLangAndCode", map);
    }

    @Override
    public int changeValidByPKey(${idType} ${idName}, int valid) {
        Map<String, Object> map = new HashMap<String, Object>();
        map.put("${idName}", ${idName});
        map.put("valid", valid);
        return getSqlSessionTemplate().update(NAMESPACE + "changeValidByPKey", map);
    }

}
